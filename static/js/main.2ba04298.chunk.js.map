{"version":3,"sources":["reducers/Pokemon/types.ts","reducers/Pokemon/index.ts","contexts/PokemonContext/utils.ts","contexts/PokemonContext/index.tsx","reducers/Pokemon/actions.ts","components/PokemonItem/index.tsx","components/PokemonModal/index.tsx","components/PokemonList/index.tsx","components/PokemonList/container.tsx","App.tsx","index.tsx","images/pokeball.png"],"names":["ActionTypes","INITIAL_STATE","pokemons","PokemonReducer","state","action","type","ADD_POKEMON","payload","ADD_POKEMONS","BASE_URL","PokemonContext","createContext","PokemonProvider","children","useReducer","dispatch","useState","loading","setLoading","providerValue","addPokemonsFromRequestResult","useCallback","requestResultArray","pokemonPromises","forEach","resultObject","id","regexResult","RegExp","exec","url","pokemonId","push","fetch","then","response","json","Promise","all","parsedPokemons","map","pokemonJson","name","types","typeInfo","imgUrl","addPokemons","fetchPokemons","acc","jsonResponse","joinedResults","results","useEffect","Provider","value","memo","pokemon","className","alt","src","join","PokemonModal","show","handleClose","Modal","size","onHide","animation","Header","closeButton","Title","Body","PokemonList","useContext","selectedPokemon","setSelectedPokemon","filteredPokemons","setFilteredPokemons","handlePokemonClick","e","preventDefault","Boolean","FormGroup","controlId","onChange","selected","isEmpty","onInputChange","input","event","newArray","filter","el","includes","options","labelKey","multiple","placeholder","maxResults","Pokeball","key","href","onClick","Container","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iLAiBYA,E,2DAAAA,K,mCAAAA,E,qCAAAA,E,wCAAAA,M,KCdZ,IAAMC,EAAuB,CAC3BC,SAAU,IAGNC,EAAiB,SAACC,EAAcC,GACpC,OAAQA,EAAOC,MACb,KAAKN,EAAYO,YACf,MAAO,CACLL,SAAS,GAAD,mBAAME,EAAMF,UAAZ,CAAsBG,EAAOG,WAEzC,KAAKR,EAAYS,aACf,MAAO,CACLP,SAAS,GAAD,mBAAME,EAAMF,UAAZ,YAAyBG,EAAOG,WAE5C,QACE,OAAOJ,I,QClBPM,EAAW,4BCgBXC,EAAiBC,wBACrB,IAGIC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EFGnDC,qBAAWZ,EAAgBF,GEHwB,mBAC5CG,EAD4C,KACrCY,EADqC,KAE3Cd,EAAaE,EAAbF,SAF2C,EAIrBe,oBAAS,GAJY,mBAI5CC,EAJ4C,KAInCC,EAJmC,KAM7CC,EAAgB,CACpBlB,WACAgB,WAGIG,EAA+BC,uBACnC,SAACC,GACC,IAAMC,EAAkC,GAExCD,EAAmBE,SAAQ,SAACC,GAC1B,ID/BsBC,EC+BhBC,EAAc,IAAIC,OAAO,aAAc,KAAKC,KAChDJ,EAAaK,KAETC,EAAYJ,GAAeA,EAAY,GAE7CJ,EAAgBS,KACdC,ODrCoBP,ECqCAK,EDrCD,UAA0BtB,EAA1B,oBAA8CiB,KCqCjCQ,MAAK,SAACC,GAAD,OAAcA,EAASC,cAIhEC,QAAQC,IAAIf,GAAiBW,MAAK,SAACjC,GACjC,IAAMsC,EAAiBtC,EAASuC,KAAI,SAACC,GAAD,MAAkB,CACpDf,GAAIe,EAAYf,GAChBgB,KAAMD,EAAYC,KAClBC,MAAOF,EAAYE,MAAMH,KACvB,SAACI,GAAD,OAA0CA,EAASvC,KAAKqC,QAE1DG,QD9CyBnB,EC8CEe,EAAYf,GD9Cf,wDACiBA,EADjB,cAACA,KCiD3BX,EClDmB,SAACd,GAAD,OACzBG,iBAAOL,EAAYS,aAAcP,GDiDlB6C,CAAYP,OAGvBrB,GAAW,KAEb,CAACH,IAGGgC,EAAgB1B,uBACpB,SAACS,EAAakB,GACZ9B,GAAW,GAEXe,MAAMH,GACHI,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACe,GACL,IAAMC,EAAa,sBAAOF,GAAP,YAAeC,EAAaE,UAK/C/B,EAA6B8B,QAInC,CAAC9B,IAOH,OAJAgC,qBAAU,WACRL,EDjF2B,UAAStC,EAAT,0BAFZ,KCmFkB,MAChC,CAACsC,IAGF,kBAACrC,EAAe2C,SAAhB,CAAyBC,MAAOnC,GAC7BN,I,mDEhEQ0C,G,cAAAA,gBAdsB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC9B9B,EAA4B8B,EAA5B9B,GAAIgB,EAAwBc,EAAxBd,KAAMC,EAAkBa,EAAlBb,MAAOE,EAAWW,EAAXX,OAEzB,OACE,wBAAIY,UAAS,uBAAkBd,EAAM,KACnC,yBAAKc,UAAU,aAAaC,IAAKhB,EAAMiB,IAAKd,IAC5C,wBAAIY,UAAU,cACX/B,EADH,KACSgB,GAET,uBAAGe,UAAU,iBAAiBd,EAAMiB,KAAK,a,SCMhCC,EAXuB,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,YAAaP,EAAc,EAAdA,QAC1D,OACE,kBAACQ,EAAA,EAAD,CAAOC,KAAK,KAAKH,KAAMA,EAAMI,OAAQH,EAAaI,WAAW,GAC3D,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,YAAcd,QAAd,IAAcA,OAAd,EAAcA,EAASd,OAEzB,kBAACsB,EAAA,EAAMO,KAAP,uD,iBC2ESC,EAnFe,WAAO,IAAD,EACJC,qBAAW/D,GAAjCT,EAD0B,EAC1BA,SAAUgB,EADgB,EAChBA,QADgB,EAEYD,mBAAyB,MAFrC,mBAE3B0D,EAF2B,KAEVC,EAFU,OAGc3D,mBAASf,GAHvB,mBAG3B2E,EAH2B,KAGTC,EAHS,KAKlCzB,qBAAU,WACRyB,EAAoB5E,KACnB,CAACA,IAEJ,IAAM6E,EAAqB,SAACtB,GAAD,OAAsB,SAC/CuB,GAEAA,EAAEC,iBACFL,EAAmBnB,KAwBrB,OACE,yBAAKC,UAAU,0BACb,kBAAC,EAAD,CACEK,KAAMmB,QAAQP,GACdX,YAAa,kBAAMY,EAAmB,OACtCnB,QAASkB,IAGX,yBAAKjB,UAAU,kBACb,kBAACyB,EAAA,EAAD,CAAWC,UAAU,iBACnB,kBAAC,IAAD,CACEC,SAnByB,SAACC,GAC9BC,IAAQD,GACVR,EAAoB5E,GAEpB4E,EAAoBQ,IAgBdE,cA7BqB,SAACC,EAAeC,GAC7C,GAAIR,QAAQO,GAAQ,CAClB,IAAME,EAAWzF,EAAS0F,QAAO,SAACC,GAAD,OAAQC,IAASD,EAAGlD,KAAM8C,MAC3DX,EAAoBa,QAEpBb,EAAoB5E,IAyBd6F,QAAS7F,EACT8F,SAAS,OACTC,UAAU,EACVC,YAAY,yBACZvE,GAAG,2BACHwE,WAAY,OAKjBjF,GACC,yBAAKwC,UAAU,qBACb,yBAAKE,IAAKwC,IAAUzC,IAAI,WAAWD,UAAU,aAIjD,6BACIxC,GACA2D,EAAiBpC,KAAI,SAACgB,GAAD,OACnB,uBACE4C,IAAK5C,EAAQ9B,GACb+B,UAAU,eACV4C,KAAK,QACLC,QAASxB,EAAmBtB,IAE5B,kBAAC,EAAD,CAAaA,QAASA,WC7ErB+C,EANG,kBAChB,kBAAC,EAAD,KACE,kBAAC,EAAD,QCSWC,G,qBATH,kBACV,oCACE,yBAAK/C,UAAU,QACb,yBAAKA,UAAU,UAAf,eAEF,kBAAC,EAAD,SCRJgD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,mBCR1BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.2ba04298.chunk.js","sourcesContent":["/**\n * Data types\n */\nexport interface Pokemon {\n  id: number;\n  name: string;\n  types: string[];\n  imgUrl: string;\n}\n\nexport interface PokemonsList {\n  pokemons: Pokemon[];\n}\n\n/**\n * Action Types\n */\nexport enum ActionTypes {\n  ADD_POKEMON = '@pokemon/ADD_POKEMON',\n  ADD_POKEMONS = '@pokemon/ADD_POKEMONS',\n  LOAD_POKEMONS = '@pokemon/LOAD_POKEMONS',\n}\n\nexport type ActionType =\n  | { type: ActionTypes.ADD_POKEMON; payload: Pokemon }\n  | { type: ActionTypes.ADD_POKEMONS; payload: Pokemon[] };\n\n/**\n * State type\n */\nexport interface State {\n  readonly pokemons: Pokemon[];\n}\n","import { useReducer } from 'react';\nimport { State, ActionType, ActionTypes } from './types';\n\nconst INITIAL_STATE: State = {\n  pokemons: [],\n};\n\nconst PokemonReducer = (state: State, action: ActionType): State => {\n  switch (action.type) {\n    case ActionTypes.ADD_POKEMON:\n      return {\n        pokemons: [...state.pokemons, action.payload],\n      };\n    case ActionTypes.ADD_POKEMONS:\n      return {\n        pokemons: [...state.pokemons, ...action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport const usePokemonReducer = () =>\n  useReducer(PokemonReducer, INITIAL_STATE);\n","const BASE_URL = 'https://pokeapi.co/api/v2';\nconst PAGE_LIMIT = 150;\n\nexport const getFirstPageUrl = () => `${BASE_URL}/pokemon?limit=${PAGE_LIMIT}`;\n\nexport const getPokemonUrl = (id: string | null) => `${BASE_URL}/pokemon/${id}`;\n\nexport const getPokemonImageUrl = (id: string) =>\n  `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n","import React, { createContext, useEffect, useState, useCallback } from 'react';\nimport { usePokemonReducer } from '../../reducers/Pokemon';\nimport { Pokemon } from '../../reducers/Pokemon/types';\nimport { addPokemons } from '../../reducers/Pokemon/actions';\nimport { getFirstPageUrl, getPokemonUrl, getPokemonImageUrl } from './utils';\n\ninterface PokemonContextData {\n  pokemons: Pokemon[];\n  loading: boolean;\n}\n\ninterface RequestResultObject {\n  name: string;\n  url: string;\n}\n\nconst PokemonContext = createContext<PokemonContextData>(\n  {} as PokemonContextData\n);\n\nconst PokemonProvider: React.SFC = ({ children }) => {\n  const [state, dispatch] = usePokemonReducer();\n  const { pokemons } = state;\n\n  const [loading, setLoading] = useState(false);\n\n  const providerValue = {\n    pokemons,\n    loading,\n  };\n\n  const addPokemonsFromRequestResult = useCallback(\n    (requestResultArray: RequestResultObject[]) => {\n      const pokemonPromises: Promise<any>[] = [];\n\n      requestResultArray.forEach((resultObject) => {\n        const regexResult = new RegExp('/([0-9]+)/', 'g').exec(\n          resultObject.url\n        );\n        const pokemonId = regexResult && regexResult[1];\n\n        pokemonPromises.push(\n          fetch(getPokemonUrl(pokemonId)).then((response) => response.json())\n        );\n      });\n\n      Promise.all(pokemonPromises).then((pokemons) => {\n        const parsedPokemons = pokemons.map((pokemonJson) => ({\n          id: pokemonJson.id,\n          name: pokemonJson.name,\n          types: pokemonJson.types.map(\n            (typeInfo: { type: { name: string } }) => typeInfo.type.name\n          ),\n          imgUrl: getPokemonImageUrl(pokemonJson.id),\n        }));\n\n        dispatch(addPokemons(parsedPokemons));\n      });\n\n      setLoading(false);\n    },\n    [dispatch]\n  );\n\n  const fetchPokemons = useCallback(\n    (url: string, acc: Array<any>) => {\n      setLoading(true);\n\n      fetch(url)\n        .then((response) => response.json())\n        .then((jsonResponse) => {\n          const joinedResults = [...acc, ...jsonResponse.results];\n\n          // if (jsonResponse.next) {\n          //   fetchPokemons(jsonResponse.next, joinedResults);\n          // } else {\n          addPokemonsFromRequestResult(joinedResults);\n          // }\n        });\n    },\n    [addPokemonsFromRequestResult]\n  );\n\n  useEffect(() => {\n    fetchPokemons(getFirstPageUrl(), []);\n  }, [fetchPokemons]);\n\n  return (\n    <PokemonContext.Provider value={providerValue}>\n      {children}\n    </PokemonContext.Provider>\n  );\n};\n\nexport { PokemonContext, PokemonProvider };\n","import { action } from 'typesafe-actions';\nimport { ActionTypes, Pokemon } from './types';\n\nexport const addPokemon = (pokemon: Pokemon) =>\n  action(ActionTypes.ADD_POKEMON, pokemon);\n\nexport const addPokemons = (pokemons: Pokemon[]) =>\n  action(ActionTypes.ADD_POKEMONS, pokemons);\n","import React, { memo } from 'react';\nimport './index.css';\n\nimport { Pokemon } from '../../reducers/Pokemon/types';\n\ninterface StateProps {\n  pokemon: Pokemon;\n}\n\nexport type Props = StateProps;\n\nconst PokemonItem: React.FC<Props> = ({ pokemon }) => {\n  const { id, name, types, imgUrl } = pokemon;\n\n  return (\n    <li className={`pokemon-card ${types[0]}`}>\n      <img className=\"card-image\" alt={name} src={imgUrl} />\n      <h2 className=\"card-title\">\n        {id}. {name}\n      </h2>\n      <p className=\"card-subtitle\">{types.join(' | ')}</p>\n    </li>\n  );\n};\n\nexport default memo(PokemonItem);\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport { Pokemon } from '../../reducers/Pokemon/types';\n\ninterface StateProps {\n  show: boolean;\n  pokemon: Pokemon | null;\n}\n\ninterface DispatchProps {\n  handleClose(): void;\n}\n\nexport type Props = StateProps & DispatchProps;\n\nconst PokemonModal: React.FC<Props> = ({ show, handleClose, pokemon }) => {\n  return (\n    <Modal size=\"lg\" show={show} onHide={handleClose} animation={false}>\n      <Modal.Header closeButton>\n        <Modal.Title>{pokemon?.name}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n    </Modal>\n  );\n};\n\nexport default PokemonModal;\n","import React, { useContext, useEffect, useState, MouseEvent } from 'react';\nimport { FormGroup } from 'react-bootstrap';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport includes from 'lodash/includes';\nimport isEmpty from 'lodash/isEmpty';\nimport './index.css';\n\nimport PokemonItem from '../PokemonItem';\nimport { PokemonContext } from '../../contexts/PokemonContext';\nimport { Pokemon } from '../../reducers/Pokemon/types';\nimport PokemonModal from '../PokemonModal';\nimport Pokeball from '../../images/pokeball.png';\n\nconst PokemonList: React.FC = () => {\n  const { pokemons, loading } = useContext(PokemonContext);\n  const [selectedPokemon, setSelectedPokemon] = useState<Pokemon | null>(null);\n  const [filteredPokemons, setFilteredPokemons] = useState(pokemons);\n\n  useEffect(() => {\n    setFilteredPokemons(pokemons);\n  }, [pokemons]);\n\n  const handlePokemonClick = (pokemon: Pokemon) => (\n    e: MouseEvent<HTMLAnchorElement>\n  ) => {\n    e.preventDefault();\n    setSelectedPokemon(pokemon);\n  };\n\n  interface FormControlElement {\n    value: string;\n  }\n\n  const handleFilterTextChange = (input: string, event: Event) => {\n    if (Boolean(input)) {\n      const newArray = pokemons.filter((el) => includes(el.name, input));\n      setFilteredPokemons(newArray);\n    } else {\n      setFilteredPokemons(pokemons);\n    }\n  };\n\n  const handleFilterOptionSelected = (selected: Pokemon[]) => {\n    if (isEmpty(selected)) {\n      setFilteredPokemons(pokemons);\n    } else {\n      setFilteredPokemons(selected);\n    }\n  };\n\n  return (\n    <div className=\"pokemon-list-container\">\n      <PokemonModal\n        show={Boolean(selectedPokemon)}\n        handleClose={() => setSelectedPokemon(null)}\n        pokemon={selectedPokemon}\n      />\n\n      <div className=\"pokemon-filter\">\n        <FormGroup controlId=\"pokemonFilter\">\n          <Typeahead\n            onChange={handleFilterOptionSelected}\n            onInputChange={handleFilterTextChange}\n            options={pokemons}\n            labelKey=\"name\"\n            multiple={false}\n            placeholder=\"Filter Pokemon by name\"\n            id=\"pokemon-filter-typeahead\"\n            maxResults={10}\n          />\n        </FormGroup>\n      </div>\n\n      {loading && (\n        <div className=\"loading-container\">\n          <img src={Pokeball} alt=\"Pokeball\" className=\"loading\" />\n        </div>\n      )}\n\n      <ul>\n        {!loading &&\n          filteredPokemons.map((pokemon) => (\n            <a\n              key={pokemon.id}\n              className=\"pokemon-link\"\n              href=\"#none\"\n              onClick={handlePokemonClick(pokemon)}\n            >\n              <PokemonItem pokemon={pokemon} />\n            </a>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PokemonList;\n","import React from 'react';\n\nimport { PokemonProvider } from '../../contexts/PokemonContext';\nimport PokemonList from './index';\n\nconst Container = () => (\n  <PokemonProvider>\n    <PokemonList />\n  </PokemonProvider>\n);\n\nexport default Container;\n","import React from 'react';\n\nimport PokemonListContainer from './components/PokemonList/container';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport './App.css';\n\nconst App = () => (\n  <>\n    <div className=\"main\">\n      <div className=\"header\">Pokédex</div>\n    </div>\n    <PokemonListContainer />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/pokeball.f10bf078.png\";"],"sourceRoot":""}